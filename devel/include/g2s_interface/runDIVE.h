// Generated by gencpp from file g2s_interface/runDIVE.msg
// DO NOT EDIT!


#ifndef G2S_INTERFACE_MESSAGE_RUNDIVE_H
#define G2S_INTERFACE_MESSAGE_RUNDIVE_H

#include <ros/service_traits.h>


#include <g2s_interface/runDIVERequest.h>
#include <g2s_interface/runDIVEResponse.h>


namespace g2s_interface
{

struct runDIVE
{

typedef runDIVERequest Request;
typedef runDIVEResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct runDIVE
} // namespace g2s_interface


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::g2s_interface::runDIVE > {
  static const char* value()
  {
    return "4f7957379a68efd7b0635ba38c967a0b";
  }

  static const char* value(const ::g2s_interface::runDIVE&) { return value(); }
};

template<>
struct DataType< ::g2s_interface::runDIVE > {
  static const char* value()
  {
    return "g2s_interface/runDIVE";
  }

  static const char* value(const ::g2s_interface::runDIVE&) { return value(); }
};


// service_traits::MD5Sum< ::g2s_interface::runDIVERequest> should match 
// service_traits::MD5Sum< ::g2s_interface::runDIVE > 
template<>
struct MD5Sum< ::g2s_interface::runDIVERequest>
{
  static const char* value()
  {
    return MD5Sum< ::g2s_interface::runDIVE >::value();
  }
  static const char* value(const ::g2s_interface::runDIVERequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::g2s_interface::runDIVERequest> should match 
// service_traits::DataType< ::g2s_interface::runDIVE > 
template<>
struct DataType< ::g2s_interface::runDIVERequest>
{
  static const char* value()
  {
    return DataType< ::g2s_interface::runDIVE >::value();
  }
  static const char* value(const ::g2s_interface::runDIVERequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::g2s_interface::runDIVEResponse> should match 
// service_traits::MD5Sum< ::g2s_interface::runDIVE > 
template<>
struct MD5Sum< ::g2s_interface::runDIVEResponse>
{
  static const char* value()
  {
    return MD5Sum< ::g2s_interface::runDIVE >::value();
  }
  static const char* value(const ::g2s_interface::runDIVEResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::g2s_interface::runDIVEResponse> should match 
// service_traits::DataType< ::g2s_interface::runDIVE > 
template<>
struct DataType< ::g2s_interface::runDIVEResponse>
{
  static const char* value()
  {
    return DataType< ::g2s_interface::runDIVE >::value();
  }
  static const char* value(const ::g2s_interface::runDIVEResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // G2S_INTERFACE_MESSAGE_RUNDIVE_H
